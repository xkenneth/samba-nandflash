# makefile generated by mcp2make 1.0.2

AS=armasm
CC=armcc
LD=armlink
FE=fromelf

INCL = .,bin_ads12,../$(TARGET)

!IF "$(DBGU_ACK)" == "Y"
ACK = -DDBG_ACK
!ELSE
ACK = 
!ENDIF

!IF "$(NAND_TYPE)" == "SMALL"
NAND = -DNAND_SMALL_BLOCKS
!ELSE
NAND = -DNAND_LARGE_BLOCKS
!ENDIF

!IF "$(TARGET)" == "AT91SAM7SE32"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x202000" -apcs /interwork -cpu ARM7TDMI -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM7TDMI -DAT91SAM7SE32 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM7SE256"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x208000" -apcs /interwork -cpu ARM7TDMI -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM7TDMI -DAT91SAM7SE256 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x202000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM7SE512"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x208000" -apcs /interwork -cpu ARM7TDMI -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM7TDMI -DAT91SAM7SE512 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x202000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9260"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x301000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9260 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9261"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x328000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9261 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x00323000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9262"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x328000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9262 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x00302000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9263"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x314000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9263 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9XE128"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x304000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9XE128 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9XE256"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x304000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9XE256 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9XE512"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x304000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9XE512 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91SAM9RL64"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x310000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91SAM9RL64 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x20023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

!IF "$(TARGET)" == "AT91CAP9"
ASFLAGS = -PD "TOP_OF_MEMORY SETA 0x108000" -apcs /interwork -cpu ARM926EJ-S -fpu None -i$(INCL)
CCFLAGS = -O2 -gtp -apcs /interwork -cpu ARM926EJ-S -DAT91CAP9 $(ACK) $(NAND) -I..\..\..\.. -I$(INCL)
LDFLAGS = -remove (dbg) -info totals -info unused -entry __ENTRY -ro-base 0x70023000 -nolocals -first cstartup_arm.o(reset) -info sizes
!ENDIF

FEFLAGS = -output SAM-BA-nand.bin -bin

OBJS = cstartup_arm.o main.o NandFlash.o NandECC_Soft.o

all: SAM-BA-NandFlash.axf
	@if exist *.axf echo Build completed

rebuild: clean all

clean:
	if exist *.o del *.o
	if exist *.axf del *.axf
	if exist *.bin del *.bin

SAM-BA-NandFlash.axf: $(OBJS)
	$(LD) $(OBJS) $(LDFLAGS) -o SAM-BA-NandFlash.axf
	$(FE) $(FEFLAGS) SAM-BA-NandFlash.axf

cstartup_arm.o: bin_ads\cstartup_arm.s
	$(AS) $(ASFLAGS) bin_ads\cstartup_arm.s -o cstartup_arm.o

main.o: main.c main.h NandFlash.h
	$(CC) -c $(CCFLAGS) main.c -o main.o

NandFlash.o: NandFlash.c main.h NandFlash.h
	$(CC) -c $(CCFLAGS) NandFlash.c -o NandFlash.o

NandECC_Soft.o: NandECC_Soft.c main.h NandFlash.h
	$(CC) -c $(CCFLAGS) NandECC_Soft.c -o NandECC_Soft.o
